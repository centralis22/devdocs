<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Backend on</title><link>https://centralis22.github.io/devdocs/docs/backend/</link><description>Recent content in Backend on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 24 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://centralis22.github.io/devdocs/docs/backend/index.xml" rel="self" type="application/rss+xml"/><item><title>Backend Structure</title><link>https://centralis22.github.io/devdocs/docs/backend/backend-structure/</link><pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate><guid>https://centralis22.github.io/devdocs/docs/backend/backend-structure/</guid><description>Packages #
For a general overview on Spring packages, see Project Structure and Best Practices.
Centralis22&amp;rsquo;s backend implementation contains the following packages:
Name Comments Config Config. Handler Classes to communicate with frontend. Model Java objects used by the backend. Can be serialized from/to DB and frontend. Repository DB query methods. See Spring Data JPA. Security Classes to validate a user and save his login information. Service Classes directly related to Centralis&amp;rsquo;s requirements.</description></item><item><title>config</title><link>https://centralis22.github.io/devdocs/docs/backend/config/</link><pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate><guid>https://centralis22.github.io/devdocs/docs/backend/config/</guid><description>WebSocketConfig #
See API Overview and API Basics.</description></item><item><title>handler</title><link>https://centralis22.github.io/devdocs/docs/backend/handler/</link><pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate><guid>https://centralis22.github.io/devdocs/docs/backend/handler/</guid><description>WebSocketAPIHandler #
All WebSocket connections to the /api endpoint will be routed to WebSocketAPIHandler. It is the first layer in client-to-server communication.
Spring exposed methods afterConnectionEstablished() and afterConnectionClosed() are used to keep track of existing connections.</description></item><item><title>model</title><link>https://centralis22.github.io/devdocs/docs/backend/model/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://centralis22.github.io/devdocs/docs/backend/model/</guid><description>Persisting POJOs #
See Database. Includes:
Instructor SimSession Survey Team SimUser #
SimUser is a network user who is currently connected to the server through a WebSocket. It is a volatile connection, actively monitored by the program, and not persisted by the database.
For example, a new SimUser is created when a network user accesses the website. It is removed when he voluntarily exits the website, or when the connection is terminated because of network instability, etc.</description></item><item><title>security</title><link>https://centralis22.github.io/devdocs/docs/backend/security/</link><pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate><guid>https://centralis22.github.io/devdocs/docs/backend/security/</guid><description>Security Design #
Hello</description></item><item><title>service.RequestDispatcher</title><link>https://centralis22.github.io/devdocs/docs/backend/service-request-dispatcher/</link><pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate><guid>https://centralis22.github.io/devdocs/docs/backend/service-request-dispatcher/</guid><description>RequestDispatcher #
Wrapper for RequestHandler. Sorts the request by type to avoid bloating the message handlers.</description></item><item><title>service.UserManagement</title><link>https://centralis22.github.io/devdocs/docs/backend/service-usermanagement/</link><pubDate>Sun, 25 Sep 2022 00:00:00 +0000</pubDate><guid>https://centralis22.github.io/devdocs/docs/backend/service-usermanagement/</guid><description>ActionDispatcher #
Calls the corresponding ActionHandler depending on action type. Prevents bloating calling functions with if-else&amp;rsquo;s.
ActionHandler #
Interface for concrete action handler implementations. Standardize code.</description></item></channel></rss>