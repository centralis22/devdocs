var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/devdocs/docs/prologue/introduction/",title:"Introduction",description:"Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.",content:`Get started #There are two main ways to get started with Doks:
Tutorial #ðŸ‘‰ The Tutorial is intended for novice to intermediate users. Step-by-step instructions on how to start a new Doks project. Tutorial â†’
Quick Start #ðŸ‘‰ The Quick Start is intended for intermediate to advanced users. One page summary of how to start a new Doks project. Quick Start â†’
Go further #Recipes, Reference Guides, Extensions, and Showcase.
Recipes #Get instructions on how to accomplish common tasks with Doks. Recipes â†’
Reference Guides #Learn how to customize Doks to fully make it your own. Reference Guides â†’
Extensions #Get instructions on how to add even more to Doks. Extensions â†’
Showcase #See what others have build with Doks. Showcase â†’
Contributing #Find out how to contribute to Doks. Contributing â†’
Help #Get help on Doks. Help â†’
`}),e.add({id:1,href:"/devdocs/docs/prologue/quick-start/",title:"Quick Start",description:"One page summary of how to start a new Doks project.",content:`Requirements #Git â€” latest source release Node.js â€” latest LTS version or newer Why Node.js?Doks uses npm (included with Node.js) to centralize dependency management, making it easy to update resources, build tooling, plugins, and build scripts. Start a new Doks project #Create a new site, change directories, install dependencies, and start development server.
Create a new site #Doks is available as a child theme and a starter theme.
Child theme #Intended for novice to intermediate users Intended for minor customizations Easily update npm packages â€” including Doks git clone https://github.com/h-enk/doks-child-theme.git my-doks-site Starter theme #Intended for intermediate to advanced users Intended for major customizations Easily update npm packages git clone https://github.com/h-enk/doks.git my-doks-site Help me chooseNot sure which one is for you? Pick the child theme. Change directories #cd my-doks-site Install dependencies #npm install Start development server #npm run start Doks will start the Hugo development webserver accessible by default at http://localhost:1313. Saved changes will live reload in the browser.
Other commands #Doks comes with commands for common tasks. Commands â†’
`}),e.add({id:2,href:"/devdocs/docs/prologue/commands/",title:"Commands",description:"Doks comes with commands for common tasks.",content:`ðŸ’¡ You can change the commands in the scripts section of \`./package.json\`. create #Create new content for your site:
npm run create [path] [flags] See also the Hugo docs: hugo new.
Docs based tree #Create a docs based tree â€” with a single command:
npm run create -- --kind docs [section] For example, create a docs based tree named guides:
npm run create -- --kind docs guides lint #Check scripts, styles, and markdown for errors:
npm run lint scripts #Check scripts for errors:
npm run lint:scripts [-- --fix] styles #Check styles for errors:
npm run lint:styles [-- --fix] markdown #Check markdown for errors:
npm run lint:markdown [-- --fix] clean #Delete temporary directories:
npm run clean start #Start local development server:
npm run start build #Build production website:
npm run build functions #Build Lambda functions:
npm run build:functions preview #Build production website including draft and future content:
npm run build:preview `}),e.add({id:3,href:"/devdocs/docs/database/",title:"Database",description:"Database.",content:""}),e.add({id:4,href:"/devdocs/docs/database/schema-relations/",title:"Schema and Relations",description:"DB Schema and relations.",content:`Overview #Version 0.2
Session #Type Name Comments INT, PK SEID Session UUID. DATETIME CREATE_DATE Session creation date. For auto deleting past sessions. INT STAGE Session progress stage (e.g. 1st poll, 2nd poll). Team #Individual students are not registered. Only teams.
Type Name Comments INT, PK TMID INT, FK SEID Session UUID in which the student belongs to. STR TNAME Team\u0026rsquo;s name (Marshall room number). Must be unique in a session. Password not required. Instructor #Admin and Instructor share a table. Both have equal priviledges, and will coordinate on which party is responsible for the simulation.
Type Name Comments INT, PK INID INT, FK SEID STR UNAME STR PSWD Instructors are required to have a password. Survey Questions #Survey questions and survey answers are stored in two separate tables. One-to-many relation. Support for MCQ, Short Answers, etc. can be added in the future.
Type Name Comments INT, PK SQID INT, FK SEID STR QUESTION Survey Answers #Type Name Comments INT, PK SAID INT, FK SQID INT, FK TMID Each team submits one survey. ?1 ANSWER Team\u0026rsquo;s answer to one question in the survey. Admin #The admin table is not listed. Will be identical to the Instructor table, except that admins are not associated with sessions.
The type has not been decided.\u0026#160;\u0026#x21a9;\u0026#xfe0e;
`}),e.add({id:5,href:"/devdocs/docs/api/",title:"API",description:"API.",content:""}),e.add({id:6,href:"/devdocs/docs/api/api-overview/",title:"API Overview",description:"API Overview.",content:`WebSocket #WebSocket, wrapped under SockJS, without STOMP protocol, is used for communication between backend and frontend. It is chosen to facilitate real-time communication of Admin/Instructors -\u0026gt; Server -\u0026gt; Teams. STOMP is disregarded because stompjs is in maintenance mode.
The backend implementation is split among the following files:
config/WebSocketConfig (TBD) handler/GreetingHandler The frontend requires the following code:
// Deployment address TBD.var sock = new SockJS('http://localhost:8080/greeting');sock.onopen = function() {console.log('open');sock.send('test');};sock.onmessage = function(e) {console.log('message', e.data);};sock.onclose = function() {console.log('close');};See Github dummy implementation.
CORS #To bypass CORS with Spring, refer to Spring Docs 25.2.6 WebSocket: Configuring allowed origins and setAllowedOriginPatterns().
`}),e.add({id:7,href:"/devdocs/docs/backend/",title:"Backend",description:"Backend.",content:""}),e.add({id:8,href:"/devdocs/docs/backend/springboot/",title:"Project Structure",description:"Spring Boot Project Structure.",content:`Packages #For an general overview, see Project Structure and Best Practices.
Centralis22\u0026rsquo;s backend implementation contains the following packages:
Name Comments Config Handler Communication with frontend. Model Java objects used in services. Can be serialized from/to DB and frontend. Repository DB query methods. Service Crucial methods that are directly related to the purpose of the application. Util Supplementary methods to help services. `}),e.add({id:9,href:"/devdocs/docs/help/how-to-update/",title:"How to Update",description:"Regularly update the installed npm packages to keep your Doks website stable, usable, and secure.",content:`ðŸ’¡ Learn more about semantic versioning and advanced range syntax. Check for outdated packages #The npm outdated command will check the registry to see if any (or, specific) installed packages are currently outdated:
npm outdated [[\u0026lt;@scope\u0026gt;/]\u0026lt;pkg\u0026gt; ...] Update packages #The npm update command will update all the packages listed to the latest version (specified by the tag config), respecting semver:
npm update [\u0026lt;pkg\u0026gt;...] `}),e.add({id:10,href:"/devdocs/docs/help/troubleshooting/",title:"Troubleshooting",description:"Solutions to common problems.",content:`Problems updating npm packages #Delete the ./node_modules folder, and run again:
npm install Problems with cache #Delete the temporary directories:
npm run clean `}),e.add({id:11,href:"/devdocs/docs/aboutdocs/",title:"About Docs",description:"About Devdocs.",content:""}),e.add({id:12,href:"/devdocs/docs/aboutdocs/quickstart/",title:"Quickstart",description:"Quickstart on Devdocs.",content:`Creating a new folder or page #All contents are located in ./content/en/docs/. Static contents are located in ./static/. Please follow the format of existing directory and file structures to create new content. For advanced instructions, please refer to the Doks website.
`}),e.add({id:13,href:"/devdocs/docs/aboutdocs/key-modifications/",title:"Key Modifications",description:"Modifications to the Doks template.",content:`Basic Modifications #Basic modifications are made according to the Doks tutorial.
Theme Modifications #Theme modifications are located in ./layouts/ and ./static/css.
Functional Modifcations #In ./partials/header/header.html, hard-coded hrefs to direct to the project subdomain /devdocs to support Github project pages. On local testing, clicking Centralis and Get Started will lead to 404.
In ./layouts/index.html, modified layout and hrefs.
In ./markdownlint-cli2.jsonc, set MD009/no-trailing-spaces = false to allow for looser markdown formatting.
`}),e.add({id:14,href:"/devdocs/docs/prologue/",title:"Prologue",description:"Prologue Doks.",content:""}),e.add({id:15,href:"/devdocs/docs/help/",title:"Help",description:"Help Doks.",content:""}),e.add({id:16,href:"/devdocs/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()